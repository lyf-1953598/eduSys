# Generated by Django 5.1.1 on 2024-09-20 23:18

import colorfield.fields
import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("system", "0007_browse_product_browse_project"),
    ]

    operations = [
        migrations.CreateModel(
            name="category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="作品类别")),
                (
                    "color",
                    colorfield.fields.ColorField(
                        default="#FF0000", image_field=None, max_length=25, samples=None
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="fromtype",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="来源名")),
            ],
        ),
        migrations.CreateModel(
            name="occupation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="职业名称")),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("location", models.CharField(max_length=255)),
                ("longitude", models.FloatField(verbose_name="经度")),
                ("latitude", models.FloatField(verbose_name="纬度")),
                ("category", models.CharField(max_length=255)),
                ("keyword", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("likes", models.PositiveIntegerField(default=0)),
                ("image", models.CharField(max_length=255)),
                ("video", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "file",
                    models.FileField(
                        blank=True, max_length=255, null=True, upload_to=""
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="tags",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="作品标签")),
            ],
        ),
        migrations.CreateModel(
            name="partner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="作者姓名")),
                (
                    "gender",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="作者性别"
                    ),
                ),
                (
                    "regional",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="出生地"
                    ),
                ),
                (
                    "point",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(),
                        blank=True,
                        null=True,
                        size=2,
                        verbose_name="出生地经纬度",
                    ),
                ),
                (
                    "avatar",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.JSONField(),
                        blank=True,
                        size=None,
                        verbose_name="作者头像",
                    ),
                ),
                (
                    "signature",
                    models.TextField(blank=True, null=True, verbose_name="个性签名"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="邮箱"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="手机号"
                    ),
                ),
                (
                    "occupation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="enroll.occupation",
                        verbose_name="职业名称",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="小组名称")),
                (
                    "member",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=128),
                        blank=True,
                        size=None,
                        verbose_name="组员",
                    ),
                ),
                (
                    "leader",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="enroll.partner",
                        verbose_name="组长",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="作品名称")),
                ("regional", models.CharField(max_length=32, verbose_name="创作地点")),
                (
                    "point",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(),
                        size=2,
                        verbose_name="创作地点经纬度",
                    ),
                ),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=32),
                        blank=True,
                        size=None,
                        verbose_name="标签(数组)",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="作品描述")),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="enroll.category",
                        verbose_name="作品类别",
                    ),
                ),
                (
                    "fromtype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="enroll.fromtype",
                        verbose_name="作品来源",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="enroll.group",
                        verbose_name="小组",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="content",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "stage",
                    models.CharField(
                        choices=[
                            ("start", "启动"),
                            ("medium", "中期"),
                            ("end", "终期"),
                        ],
                        default="start",
                        max_length=128,
                        verbose_name="作品阶段",
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="创作时间"
                    ),
                ),
                (
                    "album",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.JSONField(),
                        blank=True,
                        size=None,
                        verbose_name="作品封面",
                    ),
                ),
                (
                    "images",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.JSONField(),
                        blank=True,
                        size=None,
                        verbose_name="作品图片",
                    ),
                ),
                (
                    "video",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.JSONField(),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="作品视频",
                    ),
                ),
                (
                    "model",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.JSONField(),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="作品模型",
                    ),
                ),
                (
                    "slide",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.JSONField(),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="作品ppt",
                    ),
                ),
                (
                    "pdf",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.JSONField(),
                        blank=True,
                        null=True,
                        size=None,
                        verbose_name="作品pdf",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="enroll.product",
                        verbose_name="作品",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="project_comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.CharField(max_length=500, verbose_name="评论内容")),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="enroll.project"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="system.user"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="project_like",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="enroll.project"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="system.user"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="social_like",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.CharField(max_length=128, verbose_name="用户")),
                ("date", models.DateField(auto_now_add=True, verbose_name="时间")),
                (
                    "content",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="enroll.content",
                        verbose_name="作品内容",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="social_share",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.CharField(max_length=128, verbose_name="用户")),
                ("date", models.DateField(auto_now_add=True, verbose_name="时间")),
                (
                    "content",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="enroll.content",
                        verbose_name="作品内容",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="social_view",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.CharField(max_length=128, verbose_name="用户")),
                ("date", models.DateField(auto_now_add=True, verbose_name="时间")),
                (
                    "content",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="enroll.content",
                        verbose_name="作品内容",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UploadProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("time", models.DateTimeField(auto_now_add=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="enroll.project"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="system.user"
                    ),
                ),
            ],
        ),
    ]
